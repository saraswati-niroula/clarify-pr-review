{"id": "0", "prompt": "PR Title: Improve list scoring logic\n\nDescription:\nWe need to compute the \"score\" of a list for analytics. Make the scoring correct and efficient.", "baseline_review": "This PR improves the list scoring logic, addressing correctness and efficiency concerns.  However, the description lacks detail.  Please provide:\n\n* **Specifics on the scoring algorithm:**  What changed?  What were the previous shortcomings?  Include a clear description of the new algorithm and its rationale.\n* **Performance improvements:**  Quantify the efficiency gains (e.g., benchmark results, time complexity analysis).\n* **Test coverage:**  How was the correctness of the new algorithm validated?  Were unit tests added or existing tests updated?\n\nWithout this information, I cannot approve the PR.  Please address these points before resubmitting."}
{"id": "1", "prompt": "PR Title: Better user status\n\nDescription:\nShow a better \"active\" status for users. It should reflect engagement more accurately.", "baseline_review": "The PR title is vague.  Please specify *how* user \"active\" status is improved (e.g., \"User active status now reflects last activity timestamp\").  The description lacks detail.  Include:\n\n* **Specific changes made:**  What code was modified?  What metrics define \"engagement\"?\n* **Testing:** What tests were added or updated to cover these changes?\n* **Examples:** Show before and after screenshots or examples illustrating the improved status.\n\nWithout this information, approval cannot be granted."}
{"id": "2", "prompt": "PR Title: Optimize search\n\nDescription:\nMake search faster with caching or something similar. Keep correctness.", "baseline_review": "This PR lacks detail.  The \"caching or something similar\" is insufficient.  Please specify the caching mechanism used (e.g., Redis, in-memory cache, etc.), its eviction strategy, and any potential concurrency concerns.  Include benchmarks demonstrating performance improvements.  Furthermore, clearly articulate how correctness is maintained, particularly regarding cache invalidation and stale data.  Without this information, approval cannot be granted."}
{"id": "3", "prompt": "PR Title: Improve error reporting\n\nDescription:\nWe want clearer errors in the API responses. Make them more helpful.", "baseline_review": "The PR improves error reporting, but lacks specific examples of improvements.  Please add a section detailing the changes made and provide before/after examples of error responses for at least one endpoint.  Also, clarify if these changes impact existing clients, and if so, how the compatibility issue will be addressed.  Once these points are addressed, approval will be granted."}
{"id": "4", "prompt": "PR Title: Add pagination to transactions API\n\nDescription:\nAdd pagination to /api/transactions.", "baseline_review": "The PR adds pagination to `/api/transactions`, which is a necessary improvement for scalability.  However, please:\n\n1. **Specify the pagination parameters** used (e.g., `limit`, `offset`, `page`, `pageSize`).  Include this in both the code comments and API documentation.\n\n2. **Add thorough unit tests** covering edge cases (e.g., empty result set, invalid page numbers).\n\n3. **Document the response format** including the pagination metadata (total count, etc.).\n\n4. **Consider using a more robust pagination library** if one exists within the project, instead of implementing it manually.\n\n\nOnce these points are addressed, I will approve."}
{"id": "5", "prompt": "PR Title: Rate limiter for login\n\nDescription:\nAdd a rate limiter to login to prevent abuse.", "baseline_review": "Overall, the rate limiter addition is a welcome improvement for security.  However, please:\n\n* **Specify the rate limit algorithm and parameters:**  Document the chosen algorithm (e.g., sliding window, token bucket) and the configured rate (e.g., 5 attempts per minute).\n* **Clarify handling of failures:** How are users notified of rate limiting?  What happens if the rate limiter itself fails?  Include robust error handling.\n* **Consider logging:** Add logging to track rate limit hits and potential abuse.\n* **Unit tests:** Ensure comprehensive unit tests cover various scenarios, including exceeding the rate limit and successful logins.\n\nAddress these points before merging."}
{"id": "6", "prompt": "PR Title: Export report to CSV\n\nDescription:\nLet users export the sales report to CSV.", "baseline_review": "This PR provides a much-needed feature.  The implementation should include unit tests covering edge cases (e.g., empty report, large datasets).  Additionally, please ensure the generated CSV adheres to RFC 4180 and handles special characters appropriately.  Consider adding a progress indicator for large reports.  Approved pending these minor improvements."}
{"id": "7", "prompt": "PR Title: Image upload validation\n\nDescription:\nAdd validation for uploaded images.", "baseline_review": "This PR needs more detail.  The description is insufficient.  Please specify:\n\n* **Which types of validation are included?** (e.g., file type, file size, dimensions, MIME type)\n* **What happens when validation fails?** (e.g., error message, user feedback)\n* **Are unit tests included?**  These are crucial for image validation.\n* **Please provide examples of the error handling.**\n\nOnce these points are addressed, I can proceed with a thorough review."}
{"id": "8", "prompt": "PR Title: Update password requirements\n\nDescription:\nMake passwords simpler: only letters. Examples: - \"P@ssw0rd!\" (expected: valid)", "baseline_review": "Reject.  The proposed change weakens password security significantly by removing complexity requirements (numbers, symbols).  This is a major security risk and directly contradicts best practices.  The example provided (\"P@ssw0rd!\") is *not* a simple password consisting only of letters, demonstrating a misunderstanding of the requirements themselves.  The PR needs substantial revision to reflect a robust password policy, or be withdrawn."}
{"id": "9", "prompt": "PR Title: Normalize timezones\n\nDescription:\nStore all times in local timezone. Comments elsewhere: - \"All backend times must be UTC.\"", "baseline_review": "This PR contradicts established backend requirements (all times must be UTC).  Reject.  Please clarify the discrepancy and propose a solution consistent with UTC storage.  If a change in backend requirements is needed, open a separate issue to discuss it before proceeding."}
{"id": "10", "prompt": "PR Title: Remove deprecated endpoint\n\nDescription:\nRemove GET /v1/items. Changelog in PR body: - \"Add GET /v1/items docs.\"", "baseline_review": "This PR is incomplete.  The description claims to remove a deprecated endpoint but the title and changelog entry conflict; the changelog indicates *adding* documentation for the endpoint, not removing it.  Please clarify the intent and update the description and changelog to accurately reflect the changes.  If the endpoint is being removed, ensure all references and dependencies are handled. If it's not, correct the changelog.  Reject until clarified."}
{"id": "11", "prompt": "PR Title: Session timeout policy\n\nDescription:\nIntroduce automatic logout after inactivity. Default timeout is not specified. Apply this to all user roles.", "baseline_review": "This PR needs significant improvement before merging.  The lack of a default timeout value is a major concern and introduces ambiguity.  Specify a reasonable default timeout and justify its selection.  Additionally, consider role-based configuration; a single timeout for all users may not be appropriate.  Finally, include clear testing demonstrating the functionality and edge cases (e.g., handling concurrent requests during timeout)."}
